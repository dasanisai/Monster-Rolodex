{"version":3,"sources":["components/Card/Card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","searchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAYeA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCOdC,MAXf,SAAkBR,GAEd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCOjBM,MAZf,YAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC5B,OAEQ,uBAAOZ,UAAU,SAASa,KAAK,SAC3BF,YAAaA,EACbG,SAAUF,KC8BXG,E,kDAhCb,aAAc,IAAD,8BACX,gBAEKC,MAAM,CACTR,SAAS,GACTS,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAU,IAAD,SACsBE,KAAKR,MAA3BR,EADA,EACAA,SAASS,EADT,EACSA,YACVQ,EAAiBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC1CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAEpD,OAEA,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAkB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAC9FP,EAAiBQ,OAAS,cAAC,EAAD,CAAUzB,SAAUiB,IAAoB,kD,GA1BtDS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c58ec19.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.styles.css'\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt='robo' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n           <h2> {props.monster.name} </h2>\r\n           <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './card-list.style.css'\r\nimport Card from '../Card/Card.component'\r\nfunction CardList(props) {\r\n   \r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster=>(\r\n             <Card key={monster.id} monster={monster}/>\r\n             ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\nimport './searchBox.styles.css'\r\n\r\nfunction searchBox({placeholder,handleChange}) {\r\n    return (\r\n        \r\n            <input className='search' type='search'\r\n                placeholder={placeholder}\r\n                onChange={handleChange}>\r\n            </input>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default searchBox\r\n","import './App.css';\nimport {Component} from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/searchBox/searchBox.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[ ],\n      searchField:''\n    };\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n    \n  render() {\n    const {monsters,searchField}=this.state;\n    const filteredMonsters=monsters.filter(monster=>\n        monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return(\n      \n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder='search monsters' handleChange={e=>this.setState({searchField:e.target.value})}/>\n     {filteredMonsters.length ? <CardList monsters={filteredMonsters}/>:<p>No Results</p>}\n      \n    </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}